// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package operations

import (
	"context"
	"net/http"

	"github.com/go-resty/resty/v2"
	"github.com/primelib/komga-client/sdk/go/pkgs/models"
	"github.com/primelib/primecodegen-lib-go/requeststruct"
)

type GetHistoryV1Request struct {
	Page *int64    `queryParam:"style=simple,explode=false,name=page"` // Zero-based page index (0..N)
	Size *int64    `queryParam:"style=simple,explode=false,name=size"` // The size of the page to be returned
	Sort []*string `queryParam:"style=simple,explode=false,name=sort"` // Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
}

type GetHistoryV1Response struct {
	// Success response
	Result *models.PageHistoricalEventDto
	// Error response
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

// GetHistoryV1
//
//meta:operation GET /api/v1/history
func GetHistoryV1(client *resty.Client, ctx context.Context, req GetHistoryV1Request) (*GetHistoryV1Response, error) {
	r := client.R().SetContext(ctx)

	// process request parameters
	reqData, err := requeststruct.ResolveRequestParams(req)
	if err != nil {
		return nil, err
	}
	r.SetHeaders(reqData.HeaderParams)
	r.SetPathParams(reqData.PathParams)
	r.SetQueryParamsFromValues(reqData.QueryParams)
	if reqData.BodyParam != nil {
		r.SetBody(reqData.BodyParam)
	}
	result := new(models.PageHistoricalEventDto)
	r.SetResult(result)

	// send the request
	resp, err := r.Get("/api/v1/history")
	if err != nil {
		return nil, err
	}

	return &GetHistoryV1Response{
		StatusCode:  resp.StatusCode(),
		RawResponse: resp.RawResponse,
		Result:      result,
	}, nil
}
