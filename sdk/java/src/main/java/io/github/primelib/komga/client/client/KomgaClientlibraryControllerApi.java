// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.komga.client.client;

import feign.Headers;
import feign.Param;
import feign.RequestLine;
import io.github.primelib.komga.client.models.LibraryCreationDto;
import io.github.primelib.komga.client.models.LibraryDto;
import io.github.primelib.komga.client.models.LibraryUpdateDto;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * KomgaClientlibraryControllerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public interface KomgaClientlibraryControllerApi {

    /**
    * GetLibraryByLibraryIDV1
    * 
    *
    * @param libraryId 
    */
    @RequestLine("GET /api/v1/libraries/{libraryId}")
    LibraryDto GetLibraryByLibraryIDV1(
            @NotNull @Param("libraryId") String libraryId
    );

    /**
    * PutLibraryByLibraryIDV1
    * 
    *
    * @param libraryId 
    * @param payload 
    * @deprecated
    */
    @RequestLine("PUT /api/v1/libraries/{libraryId}")
    @Headers({
        "Content-Type: application/json"
    })
    @Deprecated
    void PutLibraryByLibraryIDV1(
            @NotNull @Param("libraryId") String libraryId,
            @NotNull LibraryUpdateDto payload
    );

    /**
    * DeleteLibraryByLibraryIDV1
    * 
    *
    * @param libraryId 
    */
    @RequestLine("DELETE /api/v1/libraries/{libraryId}")
    void DeleteLibraryByLibraryIDV1(
            @NotNull @Param("libraryId") String libraryId
    );

    /**
    * PatchLibraryByLibraryIDV1
    * 
    *
    * @param libraryId 
    * @param payload 
    */
    @RequestLine("PATCH /api/v1/libraries/{libraryId}")
    @Headers({
        "Content-Type: application/json"
    })
    void PatchLibraryByLibraryIDV1(
            @NotNull @Param("libraryId") String libraryId,
            @NotNull LibraryUpdateDto payload
    );

    /**
    * GetLibrariesV1
    * 
    *
    */
    @RequestLine("GET /api/v1/libraries")
    LibraryDto[] GetLibrariesV1();

    /**
    * PostLibrariesV1
    * 
    *
    * @param payload 
    */
    @RequestLine("POST /api/v1/libraries")
    @Headers({
        "Content-Type: application/json"
    })
    LibraryDto PostLibrariesV1(
            @NotNull LibraryCreationDto payload
    );

    /**
    * PostLibraryByLibraryIDScanV1
    * 
    *
    * @param libraryId 
    * @param deep 
    */
    @RequestLine("POST /api/v1/libraries/{libraryId}/scan?deep={deep}")
    void PostLibraryByLibraryIDScanV1(
            @NotNull @Param("libraryId") String libraryId,
            @Nullable @Param("deep") Boolean deep
    );

    /**
    * PostLibraryByLibraryIDMetadataRefreshV1
    * 
    *
    * @param libraryId 
    */
    @RequestLine("POST /api/v1/libraries/{libraryId}/metadata/refresh")
    void PostLibraryByLibraryIDMetadataRefreshV1(
            @NotNull @Param("libraryId") String libraryId
    );

    /**
    * PostLibraryByLibraryIDEmptyTrashV1
    * 
    *
    * @param libraryId 
    */
    @RequestLine("POST /api/v1/libraries/{libraryId}/empty-trash")
    void PostLibraryByLibraryIDEmptyTrashV1(
            @NotNull @Param("libraryId") String libraryId
    );

    /**
    * PostLibraryByLibraryIDAnalyzeV1
    * 
    *
    * @param libraryId 
    */
    @RequestLine("POST /api/v1/libraries/{libraryId}/analyze")
    void PostLibraryByLibraryIDAnalyzeV1(
            @NotNull @Param("libraryId") String libraryId
    );

}
