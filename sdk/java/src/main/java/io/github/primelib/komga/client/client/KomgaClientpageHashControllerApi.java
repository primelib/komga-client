// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.komga.client.client;

import feign.Headers;
import feign.Param;
import feign.RequestLine;
import io.github.primelib.komga.client.models.PageHashCreationDto;
import io.github.primelib.komga.client.models.PageHashMatchDto;
import io.github.primelib.komga.client.models.PagePageHashKnownDto;
import io.github.primelib.komga.client.models.PagePageHashMatchDto;
import io.github.primelib.komga.client.models.PagePageHashUnknownDto;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * KomgaClientpageHashControllerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public interface KomgaClientpageHashControllerApi {

    /**
    * GetPageHashesV1
    * 
    *
    * @param action 
    * @param page Zero-based page index (0..N)
    * @param size The size of the page to be returned
    * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
    */
    @RequestLine("GET /api/v1/page-hashes?action={action}&page={page}&size={size}&sort={sort}")
    PagePageHashKnownDto GetPageHashesV1(
            @Nullable @Param("action") String[] action,
            @Nullable @Param("page") Integer page,
            @Nullable @Param("size") Integer size,
            @Nullable @Param("sort") String[] sort
    );

    /**
    * PutPageHashesV1
    * 
    *
    * @param payload 
    */
    @RequestLine("PUT /api/v1/page-hashes")
    @Headers({
        "Content-Type: application/json"
    })
    void PutPageHashesV1(
            @NotNull PageHashCreationDto payload
    );

    /**
    * PostPageHashByPageHashDeleteMatchV1
    * 
    *
    * @param pageHash 
    * @param payload 
    */
    @RequestLine("POST /api/v1/page-hashes/{pageHash}/delete-match")
    @Headers({
        "Content-Type: application/json"
    })
    void PostPageHashByPageHashDeleteMatchV1(
            @NotNull @Param("pageHash") String pageHash,
            @NotNull PageHashMatchDto payload
    );

    /**
    * PostPageHashByPageHashDeleteAllV1
    * 
    *
    * @param pageHash 
    */
    @RequestLine("POST /api/v1/page-hashes/{pageHash}/delete-all")
    void PostPageHashByPageHashDeleteAllV1(
            @NotNull @Param("pageHash") String pageHash
    );

    /**
    * GetPageHashByPageHashV1
    * 
    *
    * @param pageHash 
    * @param page Zero-based page index (0..N)
    * @param size The size of the page to be returned
    * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
    */
    @RequestLine("GET /api/v1/page-hashes/{pageHash}?page={page}&size={size}&sort={sort}")
    PagePageHashMatchDto GetPageHashByPageHashV1(
            @NotNull @Param("pageHash") String pageHash,
            @Nullable @Param("page") Integer page,
            @Nullable @Param("size") Integer size,
            @Nullable @Param("sort") String[] sort
    );

    /**
    * GetPageHashByPageHashThumbnailV1
    * 
    *
    * @param pageHash 
    */
    @RequestLine("GET /api/v1/page-hashes/{pageHash}/thumbnail")
    void GetPageHashByPageHashThumbnailV1(
            @NotNull @Param("pageHash") String pageHash
    );

    /**
    * GetPageHashesUnknownV1
    * 
    *
    * @param page Zero-based page index (0..N)
    * @param size The size of the page to be returned
    * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
    */
    @RequestLine("GET /api/v1/page-hashes/unknown?page={page}&size={size}&sort={sort}")
    PagePageHashUnknownDto GetPageHashesUnknownV1(
            @Nullable @Param("page") Integer page,
            @Nullable @Param("size") Integer size,
            @Nullable @Param("sort") String[] sort
    );

    /**
    * GetPageHashesUnknownByPageHashThumbnailV1
    * 
    *
    * @param pageHash 
    * @param resize 
    */
    @RequestLine("GET /api/v1/page-hashes/unknown/{pageHash}/thumbnail?resize={resize}")
    void GetPageHashesUnknownByPageHashThumbnailV1(
            @NotNull @Param("pageHash") String pageHash,
            @Nullable @Param("resize") Integer resize
    );

}
