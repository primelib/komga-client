// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.komga.client.client;

import io.github.primelib.komga.client.models.CollectionDto;
import io.github.primelib.komga.client.models.GroupCountDto;
import io.github.primelib.komga.client.models.PageBookDto;
import io.github.primelib.komga.client.models.PageSeriesDto;
import io.github.primelib.komga.client.models.SeriesDto;
import io.github.primelib.komga.client.models.TachiyomiReadProgressV2Dto;
import io.github.primelib.komga.client.models.ThumbnailSeriesDto;
import io.github.primelib.komga.client.operations.DeleteSeriesBySeriesIDFileV1OperationSpec;
import io.github.primelib.komga.client.operations.DeleteSeriesBySeriesIDReadProgressV1OperationSpec;
import io.github.primelib.komga.client.operations.DeleteSeriesBySeriesIDThumbnailByThumbnailIDV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesAlphabeticalGroupsV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesBySeriesIDBooksV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesBySeriesIDCollectionsV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesBySeriesIDFileV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesBySeriesIDReadProgressTachiyomiV2OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesBySeriesIDThumbnailByThumbnailIDV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesBySeriesIDThumbnailV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesBySeriesIDThumbnailsV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesBySeriesIDV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesLatestV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesNewV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesUpdatedV1OperationSpec;
import io.github.primelib.komga.client.operations.GetSeriesV1OperationSpec;
import io.github.primelib.komga.client.operations.PatchSeriesBySeriesIDMetadataV1OperationSpec;
import io.github.primelib.komga.client.operations.PostSeriesBySeriesIDAnalyzeV1OperationSpec;
import io.github.primelib.komga.client.operations.PostSeriesBySeriesIDMetadataRefreshV1OperationSpec;
import io.github.primelib.komga.client.operations.PostSeriesBySeriesIDReadProgressV1OperationSpec;
import io.github.primelib.komga.client.operations.PostSeriesBySeriesIDThumbnailsV1OperationSpec;
import io.github.primelib.komga.client.operations.PutSeriesBySeriesIDReadProgressTachiyomiV2OperationSpec;
import io.github.primelib.komga.client.operations.PutSeriesBySeriesIDThumbnailByThumbnailIDSelectedV1OperationSpec;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;

/**
 * KomgaClientseriesControllerConsumerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public class KomgaClientseriesControllerConsumerApi {
    private final KomgaClientseriesControllerApi api;

    public KomgaClientseriesControllerConsumerApi(KomgaClientseriesControllerApi api) {
        this.api = api;
    }


    /**
    * GetSeriesBySeriesIDReadProgressTachiyomiV2
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    * </ul>
    */
    public TachiyomiReadProgressV2Dto GetSeriesBySeriesIDReadProgressTachiyomiV2(Consumer<GetSeriesBySeriesIDReadProgressTachiyomiV2OperationSpec> spec) {
        GetSeriesBySeriesIDReadProgressTachiyomiV2OperationSpec r = new GetSeriesBySeriesIDReadProgressTachiyomiV2OperationSpec(spec);
        return api.GetSeriesBySeriesIDReadProgressTachiyomiV2(r.seriesId());
    }

    /**
    * PutSeriesBySeriesIDReadProgressTachiyomiV2
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    *   <li>payload: </li>
    * </ul>
    */
    public void PutSeriesBySeriesIDReadProgressTachiyomiV2(Consumer<PutSeriesBySeriesIDReadProgressTachiyomiV2OperationSpec> spec) {
        PutSeriesBySeriesIDReadProgressTachiyomiV2OperationSpec r = new PutSeriesBySeriesIDReadProgressTachiyomiV2OperationSpec(spec);
        api.PutSeriesBySeriesIDReadProgressTachiyomiV2(r.seriesId(), r.payload());
    }

    /**
    * PutSeriesBySeriesIDThumbnailByThumbnailIDSelectedV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    *   <li>thumbnailId: </li>
    * </ul>
    */
    public void PutSeriesBySeriesIDThumbnailByThumbnailIDSelectedV1(Consumer<PutSeriesBySeriesIDThumbnailByThumbnailIDSelectedV1OperationSpec> spec) {
        PutSeriesBySeriesIDThumbnailByThumbnailIDSelectedV1OperationSpec r = new PutSeriesBySeriesIDThumbnailByThumbnailIDSelectedV1OperationSpec(spec);
        api.PutSeriesBySeriesIDThumbnailByThumbnailIDSelectedV1(r.seriesId(), r.thumbnailId());
    }

    /**
    * GetSeriesBySeriesIDThumbnailsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    * </ul>
    */
    public ThumbnailSeriesDto[] GetSeriesBySeriesIDThumbnailsV1(Consumer<GetSeriesBySeriesIDThumbnailsV1OperationSpec> spec) {
        GetSeriesBySeriesIDThumbnailsV1OperationSpec r = new GetSeriesBySeriesIDThumbnailsV1OperationSpec(spec);
        return api.GetSeriesBySeriesIDThumbnailsV1(r.seriesId());
    }

    /**
    * PostSeriesBySeriesIDThumbnailsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    *   <li>selected: </li>
    *   <li>payload: </li>
    * </ul>
    */
    public ThumbnailSeriesDto PostSeriesBySeriesIDThumbnailsV1(Consumer<PostSeriesBySeriesIDThumbnailsV1OperationSpec> spec) {
        PostSeriesBySeriesIDThumbnailsV1OperationSpec r = new PostSeriesBySeriesIDThumbnailsV1OperationSpec(spec);
        return api.PostSeriesBySeriesIDThumbnailsV1(r.seriesId(), r.selected(), r.payload());
    }

    /**
    * PostSeriesBySeriesIDReadProgressV1
    * 
    * Mark all book for series as read
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    * </ul>
    */
    public void PostSeriesBySeriesIDReadProgressV1(Consumer<PostSeriesBySeriesIDReadProgressV1OperationSpec> spec) {
        PostSeriesBySeriesIDReadProgressV1OperationSpec r = new PostSeriesBySeriesIDReadProgressV1OperationSpec(spec);
        api.PostSeriesBySeriesIDReadProgressV1(r.seriesId());
    }

    /**
    * DeleteSeriesBySeriesIDReadProgressV1
    * 
    * Mark all book for series as unread
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    * </ul>
    */
    public void DeleteSeriesBySeriesIDReadProgressV1(Consumer<DeleteSeriesBySeriesIDReadProgressV1OperationSpec> spec) {
        DeleteSeriesBySeriesIDReadProgressV1OperationSpec r = new DeleteSeriesBySeriesIDReadProgressV1OperationSpec(spec);
        api.DeleteSeriesBySeriesIDReadProgressV1(r.seriesId());
    }

    /**
    * PostSeriesBySeriesIDMetadataRefreshV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    * </ul>
    */
    public void PostSeriesBySeriesIDMetadataRefreshV1(Consumer<PostSeriesBySeriesIDMetadataRefreshV1OperationSpec> spec) {
        PostSeriesBySeriesIDMetadataRefreshV1OperationSpec r = new PostSeriesBySeriesIDMetadataRefreshV1OperationSpec(spec);
        api.PostSeriesBySeriesIDMetadataRefreshV1(r.seriesId());
    }

    /**
    * PostSeriesBySeriesIDAnalyzeV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    * </ul>
    */
    public void PostSeriesBySeriesIDAnalyzeV1(Consumer<PostSeriesBySeriesIDAnalyzeV1OperationSpec> spec) {
        PostSeriesBySeriesIDAnalyzeV1OperationSpec r = new PostSeriesBySeriesIDAnalyzeV1OperationSpec(spec);
        api.PostSeriesBySeriesIDAnalyzeV1(r.seriesId());
    }

    /**
    * PatchSeriesBySeriesIDMetadataV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    *   <li>payload: </li>
    * </ul>
    */
    public void PatchSeriesBySeriesIDMetadataV1(Consumer<PatchSeriesBySeriesIDMetadataV1OperationSpec> spec) {
        PatchSeriesBySeriesIDMetadataV1OperationSpec r = new PatchSeriesBySeriesIDMetadataV1OperationSpec(spec);
        api.PatchSeriesBySeriesIDMetadataV1(r.seriesId(), r.payload());
    }

    /**
    * GetSeriesV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>search: </li>
    *   <li>libraryId: </li>
    *   <li>collectionId: </li>
    *   <li>status: </li>
    *   <li>readStatus: </li>
    *   <li>publisher: </li>
    *   <li>language: </li>
    *   <li>genre: </li>
    *   <li>tag: </li>
    *   <li>ageRating: </li>
    *   <li>releaseYear: </li>
    *   <li>sharingLabel: </li>
    *   <li>deleted: </li>
    *   <li>complete: </li>
    *   <li>oneshot: </li>
    *   <li>unpaged: </li>
    *   <li>searchRegex: Search by regex criteria, in the form: regex,field. Supported fields are TITLE and TITLE_SORT.</li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    *   <li>sort: Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.</li>
    *   <li>author: Author criteria in the format: name,role. Multiple author criteria are supported.</li>
    * </ul>
    */
    public PageSeriesDto GetSeriesV1(Consumer<GetSeriesV1OperationSpec> spec) {
        GetSeriesV1OperationSpec r = new GetSeriesV1OperationSpec(spec);
        return api.GetSeriesV1(r.search(), r.libraryId(), r.collectionId(), r.status(), r.readStatus(), r.publisher(), r.language(), r.genre(), r.tag(), r.ageRating(), r.releaseYear(), r.sharingLabel(), r.deleted(), r.complete(), r.oneshot(), r.unpaged(), r.searchRegex(), r.page(), r.size(), r.sort(), r.author());
    }

    /**
    * GetSeriesBySeriesIDV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    * </ul>
    */
    public SeriesDto GetSeriesBySeriesIDV1(Consumer<GetSeriesBySeriesIDV1OperationSpec> spec) {
        GetSeriesBySeriesIDV1OperationSpec r = new GetSeriesBySeriesIDV1OperationSpec(spec);
        return api.GetSeriesBySeriesIDV1(r.seriesId());
    }

    /**
    * GetSeriesBySeriesIDThumbnailByThumbnailIDV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    *   <li>thumbnailId: </li>
    * </ul>
    */
    public void GetSeriesBySeriesIDThumbnailByThumbnailIDV1(Consumer<GetSeriesBySeriesIDThumbnailByThumbnailIDV1OperationSpec> spec) {
        GetSeriesBySeriesIDThumbnailByThumbnailIDV1OperationSpec r = new GetSeriesBySeriesIDThumbnailByThumbnailIDV1OperationSpec(spec);
        api.GetSeriesBySeriesIDThumbnailByThumbnailIDV1(r.seriesId(), r.thumbnailId());
    }

    /**
    * DeleteSeriesBySeriesIDThumbnailByThumbnailIDV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    *   <li>thumbnailId: </li>
    * </ul>
    */
    public void DeleteSeriesBySeriesIDThumbnailByThumbnailIDV1(Consumer<DeleteSeriesBySeriesIDThumbnailByThumbnailIDV1OperationSpec> spec) {
        DeleteSeriesBySeriesIDThumbnailByThumbnailIDV1OperationSpec r = new DeleteSeriesBySeriesIDThumbnailByThumbnailIDV1OperationSpec(spec);
        api.DeleteSeriesBySeriesIDThumbnailByThumbnailIDV1(r.seriesId(), r.thumbnailId());
    }

    /**
    * GetSeriesBySeriesIDThumbnailV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    * </ul>
    */
    public void GetSeriesBySeriesIDThumbnailV1(Consumer<GetSeriesBySeriesIDThumbnailV1OperationSpec> spec) {
        GetSeriesBySeriesIDThumbnailV1OperationSpec r = new GetSeriesBySeriesIDThumbnailV1OperationSpec(spec);
        api.GetSeriesBySeriesIDThumbnailV1(r.seriesId());
    }

    /**
    * GetSeriesBySeriesIDFileV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    * </ul>
    */
    public Object GetSeriesBySeriesIDFileV1(Consumer<GetSeriesBySeriesIDFileV1OperationSpec> spec) {
        GetSeriesBySeriesIDFileV1OperationSpec r = new GetSeriesBySeriesIDFileV1OperationSpec(spec);
        return api.GetSeriesBySeriesIDFileV1(r.seriesId());
    }

    /**
    * DeleteSeriesBySeriesIDFileV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    * </ul>
    */
    public void DeleteSeriesBySeriesIDFileV1(Consumer<DeleteSeriesBySeriesIDFileV1OperationSpec> spec) {
        DeleteSeriesBySeriesIDFileV1OperationSpec r = new DeleteSeriesBySeriesIDFileV1OperationSpec(spec);
        api.DeleteSeriesBySeriesIDFileV1(r.seriesId());
    }

    /**
    * GetSeriesBySeriesIDCollectionsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    * </ul>
    */
    public CollectionDto[] GetSeriesBySeriesIDCollectionsV1(Consumer<GetSeriesBySeriesIDCollectionsV1OperationSpec> spec) {
        GetSeriesBySeriesIDCollectionsV1OperationSpec r = new GetSeriesBySeriesIDCollectionsV1OperationSpec(spec);
        return api.GetSeriesBySeriesIDCollectionsV1(r.seriesId());
    }

    /**
    * GetSeriesBySeriesIDBooksV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>seriesId: </li>
    *   <li>mediaStatus: </li>
    *   <li>readStatus: </li>
    *   <li>tag: </li>
    *   <li>deleted: </li>
    *   <li>unpaged: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    *   <li>sort: Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.</li>
    *   <li>author: Author criteria in the format: name,role. Multiple author criteria are supported.</li>
    * </ul>
    */
    public PageBookDto GetSeriesBySeriesIDBooksV1(Consumer<GetSeriesBySeriesIDBooksV1OperationSpec> spec) {
        GetSeriesBySeriesIDBooksV1OperationSpec r = new GetSeriesBySeriesIDBooksV1OperationSpec(spec);
        return api.GetSeriesBySeriesIDBooksV1(r.seriesId(), r.mediaStatus(), r.readStatus(), r.tag(), r.deleted(), r.unpaged(), r.page(), r.size(), r.sort(), r.author());
    }

    /**
    * GetSeriesUpdatedV1
    * 
    * Return recently updated series, but not newly added ones.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>libraryId: </li>
    *   <li>deleted: </li>
    *   <li>oneshot: </li>
    *   <li>unpaged: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    * </ul>
    */
    public PageSeriesDto GetSeriesUpdatedV1(Consumer<GetSeriesUpdatedV1OperationSpec> spec) {
        GetSeriesUpdatedV1OperationSpec r = new GetSeriesUpdatedV1OperationSpec(spec);
        return api.GetSeriesUpdatedV1(r.libraryId(), r.deleted(), r.oneshot(), r.unpaged(), r.page(), r.size());
    }

    /**
    * GetSeriesNewV1
    * 
    * Return newly added series.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>libraryId: </li>
    *   <li>deleted: </li>
    *   <li>oneshot: </li>
    *   <li>unpaged: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    * </ul>
    */
    public PageSeriesDto GetSeriesNewV1(Consumer<GetSeriesNewV1OperationSpec> spec) {
        GetSeriesNewV1OperationSpec r = new GetSeriesNewV1OperationSpec(spec);
        return api.GetSeriesNewV1(r.libraryId(), r.deleted(), r.oneshot(), r.unpaged(), r.page(), r.size());
    }

    /**
    * GetSeriesLatestV1
    * 
    * Return recently added or updated series.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>libraryId: </li>
    *   <li>deleted: </li>
    *   <li>oneshot: </li>
    *   <li>unpaged: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    * </ul>
    */
    public PageSeriesDto GetSeriesLatestV1(Consumer<GetSeriesLatestV1OperationSpec> spec) {
        GetSeriesLatestV1OperationSpec r = new GetSeriesLatestV1OperationSpec(spec);
        return api.GetSeriesLatestV1(r.libraryId(), r.deleted(), r.oneshot(), r.unpaged(), r.page(), r.size());
    }

    /**
    * GetSeriesAlphabeticalGroupsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>search: </li>
    *   <li>libraryId: </li>
    *   <li>collectionId: </li>
    *   <li>status: </li>
    *   <li>readStatus: </li>
    *   <li>publisher: </li>
    *   <li>language: </li>
    *   <li>genre: </li>
    *   <li>tag: </li>
    *   <li>ageRating: </li>
    *   <li>releaseYear: </li>
    *   <li>sharingLabel: </li>
    *   <li>deleted: </li>
    *   <li>complete: </li>
    *   <li>oneshot: </li>
    *   <li>searchRegex: Search by regex criteria, in the form: regex,field. Supported fields are TITLE and TITLE_SORT.</li>
    *   <li>author: Author criteria in the format: name,role. Multiple author criteria are supported.</li>
    * </ul>
    */
    public GroupCountDto[] GetSeriesAlphabeticalGroupsV1(Consumer<GetSeriesAlphabeticalGroupsV1OperationSpec> spec) {
        GetSeriesAlphabeticalGroupsV1OperationSpec r = new GetSeriesAlphabeticalGroupsV1OperationSpec(spec);
        return api.GetSeriesAlphabeticalGroupsV1(r.search(), r.libraryId(), r.collectionId(), r.status(), r.readStatus(), r.publisher(), r.language(), r.genre(), r.tag(), r.ageRating(), r.releaseYear(), r.sharingLabel(), r.deleted(), r.complete(), r.oneshot(), r.searchRegex(), r.author());
    }

}
