// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.komga.client.client;

import feign.Headers;
import feign.Param;
import feign.RequestLine;
import io.github.primelib.komga.client.models.BookDto;
import io.github.primelib.komga.client.models.PageBookDto;
import io.github.primelib.komga.client.models.PageReadListDto;
import io.github.primelib.komga.client.models.PostReadlistByIDThumbnailsV1B;
import io.github.primelib.komga.client.models.PostReadlistsMatchComicrackV1B;
import io.github.primelib.komga.client.models.ReadListCreationDto;
import io.github.primelib.komga.client.models.ReadListDto;
import io.github.primelib.komga.client.models.ReadListRequestMatchDto;
import io.github.primelib.komga.client.models.ReadListUpdateDto;
import io.github.primelib.komga.client.models.TachiyomiReadProgressDto;
import io.github.primelib.komga.client.models.TachiyomiReadProgressUpdateDto;
import io.github.primelib.komga.client.models.ThumbnailReadListDto;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * KomgaClientreadListControllerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public interface KomgaClientreadListControllerApi {

    /**
    * PutReadlistByIDThumbnailByThumbnailIDSelectedV1
    * 
    *
    * @param id 
    * @param thumbnailId 
    */
    @RequestLine("PUT /api/v1/readlists/{id}/thumbnails/{thumbnailId}/selected")
    void PutReadlistByIDThumbnailByThumbnailIDSelectedV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("thumbnailId") String thumbnailId
    );

    /**
    * GetReadlistByIDReadProgressTachiyomiV1
    * 
    *
    * @param id 
    */
    @RequestLine("GET /api/v1/readlists/{id}/read-progress/tachiyomi")
    TachiyomiReadProgressDto GetReadlistByIDReadProgressTachiyomiV1(
            @NotNull @Param("id") String id
    );

    /**
    * PutReadlistByIDReadProgressTachiyomiV1
    * 
    *
    * @param id 
    * @param payload 
    */
    @RequestLine("PUT /api/v1/readlists/{id}/read-progress/tachiyomi")
    @Headers({
        "Content-Type: application/json"
    })
    void PutReadlistByIDReadProgressTachiyomiV1(
            @NotNull @Param("id") String id,
            @NotNull TachiyomiReadProgressUpdateDto payload
    );

    /**
    * GetReadlistsV1
    * 
    *
    * @param search 
    * @param libraryId 
    * @param unpaged 
    * @param page Zero-based page index (0..N)
    * @param size The size of the page to be returned
    */
    @RequestLine("GET /api/v1/readlists?search={search}&libraryId={libraryId}&unpaged={unpaged}&page={page}&size={size}")
    PageReadListDto GetReadlistsV1(
            @Nullable @Param("search") String search,
            @Nullable @Param("libraryId") String[] libraryId,
            @Nullable @Param("unpaged") Boolean unpaged,
            @Nullable @Param("page") Integer page,
            @Nullable @Param("size") Integer size
    );

    /**
    * PostReadlistsV1
    * 
    *
    * @param payload 
    */
    @RequestLine("POST /api/v1/readlists")
    @Headers({
        "Content-Type: application/json"
    })
    ReadListDto PostReadlistsV1(
            @NotNull ReadListCreationDto payload
    );

    /**
    * GetReadlistByIDThumbnailsV1
    * 
    *
    * @param id 
    */
    @RequestLine("GET /api/v1/readlists/{id}/thumbnails")
    ThumbnailReadListDto[] GetReadlistByIDThumbnailsV1(
            @NotNull @Param("id") String id
    );

    /**
    * PostReadlistByIDThumbnailsV1
    * 
    *
    * @param id 
    * @param selected 
    * @param payload 
    */
    @RequestLine("POST /api/v1/readlists/{id}/thumbnails?selected={selected}")
    @Headers({
        "Content-Type: multipart/form-data"
    })
    ThumbnailReadListDto PostReadlistByIDThumbnailsV1(
            @NotNull @Param("id") String id,
            @Nullable @Param("selected") Boolean selected,
            @NotNull PostReadlistByIDThumbnailsV1B payload
    );

    /**
    * PostReadlistsMatchComicrackV1
    * 
    *
    * @param payload 
    */
    @RequestLine("POST /api/v1/readlists/match/comicrack")
    @Headers({
        "Content-Type: application/json"
    })
    ReadListRequestMatchDto PostReadlistsMatchComicrackV1(
            @NotNull PostReadlistsMatchComicrackV1B payload
    );

    /**
    * GetReadlistByIDV1
    * 
    *
    * @param id 
    */
    @RequestLine("GET /api/v1/readlists/{id}")
    ReadListDto GetReadlistByIDV1(
            @NotNull @Param("id") String id
    );

    /**
    * DeleteReadlistByIDV1
    * 
    *
    * @param id 
    */
    @RequestLine("DELETE /api/v1/readlists/{id}")
    void DeleteReadlistByIDV1(
            @NotNull @Param("id") String id
    );

    /**
    * PatchReadlistByIDV1
    * 
    *
    * @param id 
    * @param payload 
    */
    @RequestLine("PATCH /api/v1/readlists/{id}")
    @Headers({
        "Content-Type: application/json"
    })
    void PatchReadlistByIDV1(
            @NotNull @Param("id") String id,
            @NotNull ReadListUpdateDto payload
    );

    /**
    * GetReadlistByIDThumbnailByThumbnailIDV1
    * 
    *
    * @param id 
    * @param thumbnailId 
    */
    @RequestLine("GET /api/v1/readlists/{id}/thumbnails/{thumbnailId}")
    void GetReadlistByIDThumbnailByThumbnailIDV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("thumbnailId") String thumbnailId
    );

    /**
    * DeleteReadlistByIDThumbnailByThumbnailIDV1
    * 
    *
    * @param id 
    * @param thumbnailId 
    */
    @RequestLine("DELETE /api/v1/readlists/{id}/thumbnails/{thumbnailId}")
    void DeleteReadlistByIDThumbnailByThumbnailIDV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("thumbnailId") String thumbnailId
    );

    /**
    * GetReadlistByIDThumbnailV1
    * 
    *
    * @param id 
    */
    @RequestLine("GET /api/v1/readlists/{id}/thumbnail")
    void GetReadlistByIDThumbnailV1(
            @NotNull @Param("id") String id
    );

    /**
    * GetReadlistByIDFileV1
    * 
    *
    * @param id 
    */
    @RequestLine("GET /api/v1/readlists/{id}/file")
    Object GetReadlistByIDFileV1(
            @NotNull @Param("id") String id
    );

    /**
    * GetReadlistByIDBooksV1
    * 
    *
    * @param id 
    * @param libraryId 
    * @param readStatus 
    * @param tag 
    * @param mediaStatus 
    * @param deleted 
    * @param unpaged 
    * @param page Zero-based page index (0..N)
    * @param size The size of the page to be returned
    * @param author Author criteria in the format: name,role. Multiple author criteria are supported.
    */
    @RequestLine("GET /api/v1/readlists/{id}/books?libraryId={libraryId}&readStatus={readStatus}&tag={tag}&mediaStatus={mediaStatus}&deleted={deleted}&unpaged={unpaged}&page={page}&size={size}&author={author}")
    PageBookDto GetReadlistByIDBooksV1(
            @NotNull @Param("id") String id,
            @Nullable @Param("libraryId") String[] libraryId,
            @Nullable @Param("readStatus") String[] readStatus,
            @Nullable @Param("tag") String[] tag,
            @Nullable @Param("mediaStatus") String[] mediaStatus,
            @Nullable @Param("deleted") Boolean deleted,
            @Nullable @Param("unpaged") Boolean unpaged,
            @Nullable @Param("page") Integer page,
            @Nullable @Param("size") Integer size,
            @Nullable @Param("author") String[] author
    );

    /**
    * GetReadlistByIDBookByBookIDPreviousV1
    * 
    *
    * @param id 
    * @param bookId 
    */
    @RequestLine("GET /api/v1/readlists/{id}/books/{bookId}/previous")
    BookDto GetReadlistByIDBookByBookIDPreviousV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("bookId") String bookId
    );

    /**
    * GetReadlistByIDBookByBookIDNextV1
    * 
    *
    * @param id 
    * @param bookId 
    */
    @RequestLine("GET /api/v1/readlists/{id}/books/{bookId}/next")
    BookDto GetReadlistByIDBookByBookIDNextV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("bookId") String bookId
    );

}
