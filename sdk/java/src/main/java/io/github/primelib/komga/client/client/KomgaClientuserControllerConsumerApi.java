// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.komga.client.client;

import io.github.primelib.komga.client.models.AuthenticationActivityDto;
import io.github.primelib.komga.client.models.PageAuthenticationActivityDto;
import io.github.primelib.komga.client.models.UserDto;
import io.github.primelib.komga.client.operations.DeleteUserByIDV2OperationSpec;
import io.github.primelib.komga.client.operations.GetUserByIDAuthenticationActivityLatestV2OperationSpec;
import io.github.primelib.komga.client.operations.GetUsersAuthenticationActivityV2OperationSpec;
import io.github.primelib.komga.client.operations.GetUsersMeAuthenticationActivityV2OperationSpec;
import io.github.primelib.komga.client.operations.PatchUserByIDPasswordV2OperationSpec;
import io.github.primelib.komga.client.operations.PatchUserByIDV2OperationSpec;
import io.github.primelib.komga.client.operations.PatchUsersMePasswordV2OperationSpec;
import io.github.primelib.komga.client.operations.PostUsersV2OperationSpec;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;

/**
 * KomgaClientuserControllerConsumerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public class KomgaClientuserControllerConsumerApi {
    private final KomgaClientuserControllerApi api;

    public KomgaClientuserControllerConsumerApi(KomgaClientuserControllerApi api) {
        this.api = api;
    }


    /**
    * GetUsersV2
    * 
    *
    */
    public UserDto[] GetUsersV2() {
        return api.GetUsersV2();
    }

    /**
    * PostUsersV2
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>payload: </li>
    * </ul>
    */
    public UserDto PostUsersV2(Consumer<PostUsersV2OperationSpec> spec) {
        PostUsersV2OperationSpec r = new PostUsersV2OperationSpec(spec);
        return api.PostUsersV2(r.payload());
    }

    /**
    * DeleteUserByIDV2
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    * </ul>
    */
    public void DeleteUserByIDV2(Consumer<DeleteUserByIDV2OperationSpec> spec) {
        DeleteUserByIDV2OperationSpec r = new DeleteUserByIDV2OperationSpec(spec);
        api.DeleteUserByIDV2(r.id());
    }

    /**
    * PatchUserByIDV2
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    *   <li>payload: </li>
    * </ul>
    */
    public void PatchUserByIDV2(Consumer<PatchUserByIDV2OperationSpec> spec) {
        PatchUserByIDV2OperationSpec r = new PatchUserByIDV2OperationSpec(spec);
        api.PatchUserByIDV2(r.id(), r.payload());
    }

    /**
    * PatchUserByIDPasswordV2
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    *   <li>payload: </li>
    * </ul>
    */
    public void PatchUserByIDPasswordV2(Consumer<PatchUserByIDPasswordV2OperationSpec> spec) {
        PatchUserByIDPasswordV2OperationSpec r = new PatchUserByIDPasswordV2OperationSpec(spec);
        api.PatchUserByIDPasswordV2(r.id(), r.payload());
    }

    /**
    * PatchUsersMePasswordV2
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>payload: </li>
    * </ul>
    */
    public void PatchUsersMePasswordV2(Consumer<PatchUsersMePasswordV2OperationSpec> spec) {
        PatchUsersMePasswordV2OperationSpec r = new PatchUsersMePasswordV2OperationSpec(spec);
        api.PatchUsersMePasswordV2(r.payload());
    }

    /**
    * GetUserByIDAuthenticationActivityLatestV2
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    * </ul>
    */
    public AuthenticationActivityDto GetUserByIDAuthenticationActivityLatestV2(Consumer<GetUserByIDAuthenticationActivityLatestV2OperationSpec> spec) {
        GetUserByIDAuthenticationActivityLatestV2OperationSpec r = new GetUserByIDAuthenticationActivityLatestV2OperationSpec(spec);
        return api.GetUserByIDAuthenticationActivityLatestV2(r.id());
    }

    /**
    * GetUsersMeV2
    * 
    *
    */
    public UserDto GetUsersMeV2() {
        return api.GetUsersMeV2();
    }

    /**
    * GetUsersMeAuthenticationActivityV2
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>unpaged: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    *   <li>sort: Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.</li>
    * </ul>
    */
    public PageAuthenticationActivityDto GetUsersMeAuthenticationActivityV2(Consumer<GetUsersMeAuthenticationActivityV2OperationSpec> spec) {
        GetUsersMeAuthenticationActivityV2OperationSpec r = new GetUsersMeAuthenticationActivityV2OperationSpec(spec);
        return api.GetUsersMeAuthenticationActivityV2(r.unpaged(), r.page(), r.size(), r.sort());
    }

    /**
    * GetUsersAuthenticationActivityV2
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>unpaged: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    *   <li>sort: Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.</li>
    * </ul>
    */
    public PageAuthenticationActivityDto GetUsersAuthenticationActivityV2(Consumer<GetUsersAuthenticationActivityV2OperationSpec> spec) {
        GetUsersAuthenticationActivityV2OperationSpec r = new GetUsersAuthenticationActivityV2OperationSpec(spec);
        return api.GetUsersAuthenticationActivityV2(r.unpaged(), r.page(), r.size(), r.sort());
    }

}
