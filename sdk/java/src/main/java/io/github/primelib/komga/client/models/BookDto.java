// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.komga.client.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.Instant;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * BookDto
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("BookDto")
@JsonPropertyOrder({
    "id",
    "seriesId",
    "seriesTitle",
    "libraryId",
    "name",
    "url",
    "number",
    "created",
    "lastModified",
    "fileLastModified",
    "sizeBytes",
    "size",
    "media",
    "metadata",
    "readProgress",
    "deleted",
    "fileHash",
    "oneshot"
})
@Generated(value = "io.github.primelib.primecodegen")
public class BookDto {

    @JsonProperty("id")
    protected String id;

    @JsonProperty("seriesId")
    protected String seriesId;

    @JsonProperty("seriesTitle")
    protected String seriesTitle;

    @JsonProperty("libraryId")
    protected String libraryId;

    @JsonProperty("name")
    protected String name;

    @JsonProperty("url")
    protected String url;

    @JsonProperty("number")
    protected Integer number;

    @JsonProperty("created")
    protected java.time.Instant created;

    @JsonProperty("lastModified")
    protected java.time.Instant lastModified;

    @JsonProperty("fileLastModified")
    protected java.time.Instant fileLastModified;

    @JsonProperty("sizeBytes")
    protected Long sizeBytes;

    @JsonProperty("size")
    protected String size;

    @JsonProperty("media")
    protected MediaDto media;

    @JsonProperty("metadata")
    protected BookMetadataDto metadata;

    @JsonProperty("readProgress")
    protected ReadProgressDto readProgress;

    @JsonProperty("deleted")
    protected Boolean deleted;

    @JsonProperty("fileHash")
    protected String fileHash;

    @JsonProperty("oneshot")
    protected Boolean oneshot;

    /**
     * Constructs a validated instance of {@link BookDto}.
     *
     * @param spec the specification to process
     */
    public BookDto(Consumer<BookDto> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link BookDto}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #BookDto(Consumer)} instead.
     * @param id id
     * @param seriesId seriesId
     * @param seriesTitle seriesTitle
     * @param libraryId libraryId
     * @param name name
     * @param url url
     * @param number number
     * @param created created
     * @param lastModified lastModified
     * @param fileLastModified fileLastModified
     * @param sizeBytes sizeBytes
     * @param size size
     * @param media media
     * @param metadata metadata
     * @param readProgress readProgress
     * @param deleted deleted
     * @param fileHash fileHash
     * @param oneshot oneshot
     */
    @ApiStatus.Internal
    public BookDto(String id, String seriesId, String seriesTitle, String libraryId, String name, String url, Integer number, Instant created, Instant lastModified, Instant fileLastModified, Long sizeBytes, String size, MediaDto media, BookMetadataDto metadata, ReadProgressDto readProgress, Boolean deleted, String fileHash, Boolean oneshot) {
        this.id = id;
        this.seriesId = seriesId;
        this.seriesTitle = seriesTitle;
        this.libraryId = libraryId;
        this.name = name;
        this.url = url;
        this.number = number;
        this.created = created;
        this.lastModified = lastModified;
        this.fileLastModified = fileLastModified;
        this.sizeBytes = sizeBytes;
        this.size = size;
        this.media = media;
        this.metadata = metadata;
        this.readProgress = readProgress;
        this.deleted = deleted;
        this.fileHash = fileHash;
        this.oneshot = oneshot;
    }
}
