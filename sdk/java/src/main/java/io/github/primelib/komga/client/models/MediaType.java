// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.komga.client.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.Map;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * MediaType
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("MediaType")
@JsonPropertyOrder({
    "type",
    "subtype",
    "parameters",
    "qualityValue",
    "concrete",
    "wildcardType",
    "wildcardSubtype",
    "subtypeSuffix",
    "charset"
})
@Generated(value = "io.github.primelib.primecodegen")
public class MediaType {

    @JsonProperty("type")
    protected String type;

    @JsonProperty("subtype")
    protected String subtype;

    @JsonProperty("parameters")
    protected Map<String, String> parameters;

    @JsonProperty("qualityValue")
    protected Double qualityValue;

    @JsonProperty("concrete")
    protected Boolean concrete;

    @JsonProperty("wildcardType")
    protected Boolean wildcardType;

    @JsonProperty("wildcardSubtype")
    protected Boolean wildcardSubtype;

    @JsonProperty("subtypeSuffix")
    protected String subtypeSuffix;

    @JsonProperty("charset")
    protected String charset;

    /**
     * Constructs a validated instance of {@link MediaType}.
     *
     * @param spec the specification to process
     */
    public MediaType(Consumer<MediaType> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link MediaType}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #MediaType(Consumer)} instead.
     * @param type type
     * @param subtype subtype
     * @param parameters parameters
     * @param qualityValue qualityValue
     * @param concrete concrete
     * @param wildcardType wildcardType
     * @param wildcardSubtype wildcardSubtype
     * @param subtypeSuffix subtypeSuffix
     * @param charset charset
     */
    @ApiStatus.Internal
    public MediaType(String type, String subtype, Map<String, String> parameters, Double qualityValue, Boolean concrete, Boolean wildcardType, Boolean wildcardSubtype, String subtypeSuffix, String charset) {
        this.type = type;
        this.subtype = subtype;
        this.parameters = parameters;
        this.qualityValue = qualityValue;
        this.concrete = concrete;
        this.wildcardType = wildcardType;
        this.wildcardSubtype = wildcardSubtype;
        this.subtypeSuffix = subtypeSuffix;
        this.charset = charset;
    }
}
