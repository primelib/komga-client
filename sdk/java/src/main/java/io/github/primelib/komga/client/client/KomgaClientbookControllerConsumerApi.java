// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.komga.client.client;

import io.github.primelib.komga.client.models.BookDto;
import io.github.primelib.komga.client.models.PageBookDto;
import io.github.primelib.komga.client.models.PageDto;
import io.github.primelib.komga.client.models.ReadListDto;
import io.github.primelib.komga.client.models.ThumbnailBookDto;
import io.github.primelib.komga.client.models.WppublicationDto;
import io.github.primelib.komga.client.operations.DeleteBookByBookIDFileV1OperationSpec;
import io.github.primelib.komga.client.operations.DeleteBookByBookIDReadProgressV1OperationSpec;
import io.github.primelib.komga.client.operations.DeleteBookByBookIDThumbnailByThumbnailIDV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDFileV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDManifestDivinaV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDManifestPdfV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDManifestV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDNextV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDPageByPageNumberRawV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDPageByPageNumberThumbnailV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDPageByPageNumberV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDPagesV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDPreviousV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDReadlistsV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDThumbnailByThumbnailIDV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDThumbnailV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDThumbnailsV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBookByBookIDV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBooksDuplicatesV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBooksLatestV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBooksOndeckV1OperationSpec;
import io.github.primelib.komga.client.operations.GetBooksV1OperationSpec;
import io.github.primelib.komga.client.operations.GetOpdsV12BookByBookIDFileV1OperationSpec;
import io.github.primelib.komga.client.operations.GetOpdsV12BookByBookIDPageByPageNumberV1OperationSpec;
import io.github.primelib.komga.client.operations.PatchBookByBookIDMetadataV1OperationSpec;
import io.github.primelib.komga.client.operations.PatchBookByBookIDReadProgressV1OperationSpec;
import io.github.primelib.komga.client.operations.PatchBooksMetadataV1OperationSpec;
import io.github.primelib.komga.client.operations.PostBookByBookIDAnalyzeV1OperationSpec;
import io.github.primelib.komga.client.operations.PostBookByBookIDMetadataRefreshV1OperationSpec;
import io.github.primelib.komga.client.operations.PostBookByBookIDThumbnailsV1OperationSpec;
import io.github.primelib.komga.client.operations.PostBooksImportV1OperationSpec;
import io.github.primelib.komga.client.operations.PutBookByBookIDThumbnailByThumbnailIDSelectedV1OperationSpec;
import io.github.primelib.komga.client.operations.PutBooksThumbnailsV1OperationSpec;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;

/**
 * KomgaClientbookControllerConsumerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public class KomgaClientbookControllerConsumerApi {
    private final KomgaClientbookControllerApi api;

    public KomgaClientbookControllerConsumerApi(KomgaClientbookControllerApi api) {
        this.api = api;
    }


    /**
    * PutBookByBookIDThumbnailByThumbnailIDSelectedV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    *   <li>thumbnailId: </li>
    * </ul>
    */
    public void PutBookByBookIDThumbnailByThumbnailIDSelectedV1(Consumer<PutBookByBookIDThumbnailByThumbnailIDSelectedV1OperationSpec> spec) {
        PutBookByBookIDThumbnailByThumbnailIDSelectedV1OperationSpec r = new PutBookByBookIDThumbnailByThumbnailIDSelectedV1OperationSpec(spec);
        api.PutBookByBookIDThumbnailByThumbnailIDSelectedV1(r.bookId(), r.thumbnailId());
    }

    /**
    * PutBooksThumbnailsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>forBiggerResultOnly: </li>
    * </ul>
    */
    public void PutBooksThumbnailsV1(Consumer<PutBooksThumbnailsV1OperationSpec> spec) {
        PutBooksThumbnailsV1OperationSpec r = new PutBooksThumbnailsV1OperationSpec(spec);
        api.PutBooksThumbnailsV1(r.forBiggerResultOnly());
    }

    /**
    * GetBookByBookIDThumbnailsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public ThumbnailBookDto[] GetBookByBookIDThumbnailsV1(Consumer<GetBookByBookIDThumbnailsV1OperationSpec> spec) {
        GetBookByBookIDThumbnailsV1OperationSpec r = new GetBookByBookIDThumbnailsV1OperationSpec(spec);
        return api.GetBookByBookIDThumbnailsV1(r.bookId());
    }

    /**
    * PostBookByBookIDThumbnailsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    *   <li>selected: </li>
    *   <li>payload: </li>
    * </ul>
    */
    public ThumbnailBookDto PostBookByBookIDThumbnailsV1(Consumer<PostBookByBookIDThumbnailsV1OperationSpec> spec) {
        PostBookByBookIDThumbnailsV1OperationSpec r = new PostBookByBookIDThumbnailsV1OperationSpec(spec);
        return api.PostBookByBookIDThumbnailsV1(r.bookId(), r.selected(), r.payload());
    }

    /**
    * PostBookByBookIDMetadataRefreshV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public void PostBookByBookIDMetadataRefreshV1(Consumer<PostBookByBookIDMetadataRefreshV1OperationSpec> spec) {
        PostBookByBookIDMetadataRefreshV1OperationSpec r = new PostBookByBookIDMetadataRefreshV1OperationSpec(spec);
        api.PostBookByBookIDMetadataRefreshV1(r.bookId());
    }

    /**
    * PostBookByBookIDAnalyzeV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public void PostBookByBookIDAnalyzeV1(Consumer<PostBookByBookIDAnalyzeV1OperationSpec> spec) {
        PostBookByBookIDAnalyzeV1OperationSpec r = new PostBookByBookIDAnalyzeV1OperationSpec(spec);
        api.PostBookByBookIDAnalyzeV1(r.bookId());
    }

    /**
    * PostBooksImportV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>payload: </li>
    * </ul>
    */
    public void PostBooksImportV1(Consumer<PostBooksImportV1OperationSpec> spec) {
        PostBooksImportV1OperationSpec r = new PostBooksImportV1OperationSpec(spec);
        api.PostBooksImportV1(r.payload());
    }

    /**
    * DeleteBookByBookIDReadProgressV1
    * 
    * Mark book as unread
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public void DeleteBookByBookIDReadProgressV1(Consumer<DeleteBookByBookIDReadProgressV1OperationSpec> spec) {
        DeleteBookByBookIDReadProgressV1OperationSpec r = new DeleteBookByBookIDReadProgressV1OperationSpec(spec);
        api.DeleteBookByBookIDReadProgressV1(r.bookId());
    }

    /**
    * PatchBookByBookIDReadProgressV1
    * 
    * Mark book as read and/or change page progress
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    *   <li>payload: </li>
    * </ul>
    */
    public void PatchBookByBookIDReadProgressV1(Consumer<PatchBookByBookIDReadProgressV1OperationSpec> spec) {
        PatchBookByBookIDReadProgressV1OperationSpec r = new PatchBookByBookIDReadProgressV1OperationSpec(spec);
        api.PatchBookByBookIDReadProgressV1(r.bookId(), r.payload());
    }

    /**
    * PatchBookByBookIDMetadataV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    *   <li>payload: </li>
    * </ul>
    */
    public void PatchBookByBookIDMetadataV1(Consumer<PatchBookByBookIDMetadataV1OperationSpec> spec) {
        PatchBookByBookIDMetadataV1OperationSpec r = new PatchBookByBookIDMetadataV1OperationSpec(spec);
        api.PatchBookByBookIDMetadataV1(r.bookId(), r.payload());
    }

    /**
    * PatchBooksMetadataV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>payload: </li>
    * </ul>
    */
    public void PatchBooksMetadataV1(Consumer<PatchBooksMetadataV1OperationSpec> spec) {
        PatchBooksMetadataV1OperationSpec r = new PatchBooksMetadataV1OperationSpec(spec);
        api.PatchBooksMetadataV1(r.payload());
    }

    /**
    * GetOpdsV12BookByBookIDPageByPageNumberV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    *   <li>pageNumber: </li>
    *   <li>convert: Convert the image to the provided format.</li>
    * </ul>
    */
    public void GetOpdsV12BookByBookIDPageByPageNumberV1(Consumer<GetOpdsV12BookByBookIDPageByPageNumberV1OperationSpec> spec) {
        GetOpdsV12BookByBookIDPageByPageNumberV1OperationSpec r = new GetOpdsV12BookByBookIDPageByPageNumberV1OperationSpec(spec);
        api.GetOpdsV12BookByBookIDPageByPageNumberV1(r.bookId(), r.pageNumber(), r.convert());
    }

    /**
    * GetBooksV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>search: </li>
    *   <li>libraryId: </li>
    *   <li>mediaStatus: </li>
    *   <li>readStatus: </li>
    *   <li>releasedAfter: </li>
    *   <li>tag: </li>
    *   <li>unpaged: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    *   <li>sort: Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.</li>
    * </ul>
    */
    public PageBookDto GetBooksV1(Consumer<GetBooksV1OperationSpec> spec) {
        GetBooksV1OperationSpec r = new GetBooksV1OperationSpec(spec);
        return api.GetBooksV1(r.search(), r.libraryId(), r.mediaStatus(), r.readStatus(), r.releasedAfter(), r.tag(), r.unpaged(), r.page(), r.size(), r.sort());
    }

    /**
    * GetBookByBookIDV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public BookDto GetBookByBookIDV1(Consumer<GetBookByBookIDV1OperationSpec> spec) {
        GetBookByBookIDV1OperationSpec r = new GetBookByBookIDV1OperationSpec(spec);
        return api.GetBookByBookIDV1(r.bookId());
    }

    /**
    * GetBookByBookIDThumbnailByThumbnailIDV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    *   <li>thumbnailId: </li>
    * </ul>
    */
    public void GetBookByBookIDThumbnailByThumbnailIDV1(Consumer<GetBookByBookIDThumbnailByThumbnailIDV1OperationSpec> spec) {
        GetBookByBookIDThumbnailByThumbnailIDV1OperationSpec r = new GetBookByBookIDThumbnailByThumbnailIDV1OperationSpec(spec);
        api.GetBookByBookIDThumbnailByThumbnailIDV1(r.bookId(), r.thumbnailId());
    }

    /**
    * DeleteBookByBookIDThumbnailByThumbnailIDV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    *   <li>thumbnailId: </li>
    * </ul>
    */
    public void DeleteBookByBookIDThumbnailByThumbnailIDV1(Consumer<DeleteBookByBookIDThumbnailByThumbnailIDV1OperationSpec> spec) {
        DeleteBookByBookIDThumbnailByThumbnailIDV1OperationSpec r = new DeleteBookByBookIDThumbnailByThumbnailIDV1OperationSpec(spec);
        api.DeleteBookByBookIDThumbnailByThumbnailIDV1(r.bookId(), r.thumbnailId());
    }

    /**
    * GetBookByBookIDThumbnailV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public void GetBookByBookIDThumbnailV1(Consumer<GetBookByBookIDThumbnailV1OperationSpec> spec) {
        GetBookByBookIDThumbnailV1OperationSpec r = new GetBookByBookIDThumbnailV1OperationSpec(spec);
        api.GetBookByBookIDThumbnailV1(r.bookId());
    }

    /**
    * GetBookByBookIDReadlistsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public ReadListDto[] GetBookByBookIDReadlistsV1(Consumer<GetBookByBookIDReadlistsV1OperationSpec> spec) {
        GetBookByBookIDReadlistsV1OperationSpec r = new GetBookByBookIDReadlistsV1OperationSpec(spec);
        return api.GetBookByBookIDReadlistsV1(r.bookId());
    }

    /**
    * GetBookByBookIDPreviousV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public BookDto GetBookByBookIDPreviousV1(Consumer<GetBookByBookIDPreviousV1OperationSpec> spec) {
        GetBookByBookIDPreviousV1OperationSpec r = new GetBookByBookIDPreviousV1OperationSpec(spec);
        return api.GetBookByBookIDPreviousV1(r.bookId());
    }

    /**
    * GetBookByBookIDPagesV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public PageDto[] GetBookByBookIDPagesV1(Consumer<GetBookByBookIDPagesV1OperationSpec> spec) {
        GetBookByBookIDPagesV1OperationSpec r = new GetBookByBookIDPagesV1OperationSpec(spec);
        return api.GetBookByBookIDPagesV1(r.bookId());
    }

    /**
    * GetBookByBookIDPageByPageNumberV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    *   <li>pageNumber: </li>
    *   <li>convert: Convert the image to the provided format.</li>
    *   <li>zeroBased: If set to true, pages will start at index 0. If set to false, pages will start at index 1.</li>
    *   <li>accept: Some very limited server driven content negotiation is handled. If a book is a PDF book, and the Accept header contains 'application/pdf' as a more specific type than other 'image/' types, a raw PDF page will be returned.</li>
    * </ul>
    */
    public void GetBookByBookIDPageByPageNumberV1(Consumer<GetBookByBookIDPageByPageNumberV1OperationSpec> spec) {
        GetBookByBookIDPageByPageNumberV1OperationSpec r = new GetBookByBookIDPageByPageNumberV1OperationSpec(spec);
        api.GetBookByBookIDPageByPageNumberV1(r.bookId(), r.pageNumber(), r.convert(), r.zeroBased(), r.accept());
    }

    /**
    * GetBookByBookIDPageByPageNumberThumbnailV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    *   <li>pageNumber: </li>
    * </ul>
    */
    public void GetBookByBookIDPageByPageNumberThumbnailV1(Consumer<GetBookByBookIDPageByPageNumberThumbnailV1OperationSpec> spec) {
        GetBookByBookIDPageByPageNumberThumbnailV1OperationSpec r = new GetBookByBookIDPageByPageNumberThumbnailV1OperationSpec(spec);
        api.GetBookByBookIDPageByPageNumberThumbnailV1(r.bookId(), r.pageNumber());
    }

    /**
    * GetBookByBookIDPageByPageNumberRawV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    *   <li>pageNumber: </li>
    * </ul>
    */
    public Byte[] GetBookByBookIDPageByPageNumberRawV1(Consumer<GetBookByBookIDPageByPageNumberRawV1OperationSpec> spec) {
        GetBookByBookIDPageByPageNumberRawV1OperationSpec r = new GetBookByBookIDPageByPageNumberRawV1OperationSpec(spec);
        return api.GetBookByBookIDPageByPageNumberRawV1(r.bookId(), r.pageNumber());
    }

    /**
    * GetBookByBookIDNextV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public BookDto GetBookByBookIDNextV1(Consumer<GetBookByBookIDNextV1OperationSpec> spec) {
        GetBookByBookIDNextV1OperationSpec r = new GetBookByBookIDNextV1OperationSpec(spec);
        return api.GetBookByBookIDNextV1(r.bookId());
    }

    /**
    * GetBookByBookIDManifestV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public WppublicationDto GetBookByBookIDManifestV1(Consumer<GetBookByBookIDManifestV1OperationSpec> spec) {
        GetBookByBookIDManifestV1OperationSpec r = new GetBookByBookIDManifestV1OperationSpec(spec);
        return api.GetBookByBookIDManifestV1(r.bookId());
    }

    /**
    * GetBookByBookIDManifestPdfV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public WppublicationDto GetBookByBookIDManifestPdfV1(Consumer<GetBookByBookIDManifestPdfV1OperationSpec> spec) {
        GetBookByBookIDManifestPdfV1OperationSpec r = new GetBookByBookIDManifestPdfV1OperationSpec(spec);
        return api.GetBookByBookIDManifestPdfV1(r.bookId());
    }

    /**
    * GetBookByBookIDManifestDivinaV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public WppublicationDto GetBookByBookIDManifestDivinaV1(Consumer<GetBookByBookIDManifestDivinaV1OperationSpec> spec) {
        GetBookByBookIDManifestDivinaV1OperationSpec r = new GetBookByBookIDManifestDivinaV1OperationSpec(spec);
        return api.GetBookByBookIDManifestDivinaV1(r.bookId());
    }

    /**
    * GetBookByBookIDFileV1
    * 
    * Download the book file.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public Object GetBookByBookIDFileV1(Consumer<GetBookByBookIDFileV1OperationSpec> spec) {
        GetBookByBookIDFileV1OperationSpec r = new GetBookByBookIDFileV1OperationSpec(spec);
        return api.GetBookByBookIDFileV1(r.bookId());
    }

    /**
    * DeleteBookByBookIDFileV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public void DeleteBookByBookIDFileV1(Consumer<DeleteBookByBookIDFileV1OperationSpec> spec) {
        DeleteBookByBookIDFileV1OperationSpec r = new DeleteBookByBookIDFileV1OperationSpec(spec);
        api.DeleteBookByBookIDFileV1(r.bookId());
    }

    /**
    * GetOpdsV12BookByBookIDFileV1
    * 
    * Download the book file.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>bookId: </li>
    * </ul>
    */
    public Object GetOpdsV12BookByBookIDFileV1(Consumer<GetOpdsV12BookByBookIDFileV1OperationSpec> spec) {
        GetOpdsV12BookByBookIDFileV1OperationSpec r = new GetOpdsV12BookByBookIDFileV1OperationSpec(spec);
        return api.GetOpdsV12BookByBookIDFileV1(r.bookId());
    }

    /**
    * GetBooksOndeckV1
    * 
    * Return first unread book of series with at least one book read and no books in progress.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>libraryId: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    * </ul>
    */
    public PageBookDto GetBooksOndeckV1(Consumer<GetBooksOndeckV1OperationSpec> spec) {
        GetBooksOndeckV1OperationSpec r = new GetBooksOndeckV1OperationSpec(spec);
        return api.GetBooksOndeckV1(r.libraryId(), r.page(), r.size());
    }

    /**
    * GetBooksLatestV1
    * 
    * Return newly added or updated books.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>unpaged: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    * </ul>
    */
    public PageBookDto GetBooksLatestV1(Consumer<GetBooksLatestV1OperationSpec> spec) {
        GetBooksLatestV1OperationSpec r = new GetBooksLatestV1OperationSpec(spec);
        return api.GetBooksLatestV1(r.unpaged(), r.page(), r.size());
    }

    /**
    * GetBooksDuplicatesV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>unpaged: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    *   <li>sort: Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.</li>
    * </ul>
    */
    public PageBookDto GetBooksDuplicatesV1(Consumer<GetBooksDuplicatesV1OperationSpec> spec) {
        GetBooksDuplicatesV1OperationSpec r = new GetBooksDuplicatesV1OperationSpec(spec);
        return api.GetBooksDuplicatesV1(r.unpaged(), r.page(), r.size(), r.sort());
    }

}
