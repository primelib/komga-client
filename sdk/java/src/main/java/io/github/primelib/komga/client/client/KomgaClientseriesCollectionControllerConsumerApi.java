// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.komga.client.client;

import io.github.primelib.komga.client.models.CollectionDto;
import io.github.primelib.komga.client.models.PageCollectionDto;
import io.github.primelib.komga.client.models.PageSeriesDto;
import io.github.primelib.komga.client.models.ThumbnailSeriesCollectionDto;
import io.github.primelib.komga.client.operations.DeleteCollectionByIDThumbnailByThumbnailIDV1OperationSpec;
import io.github.primelib.komga.client.operations.DeleteCollectionByIDV1OperationSpec;
import io.github.primelib.komga.client.operations.GetCollectionByIDSeriesV1OperationSpec;
import io.github.primelib.komga.client.operations.GetCollectionByIDThumbnailByThumbnailIDV1OperationSpec;
import io.github.primelib.komga.client.operations.GetCollectionByIDThumbnailV1OperationSpec;
import io.github.primelib.komga.client.operations.GetCollectionByIDThumbnailsV1OperationSpec;
import io.github.primelib.komga.client.operations.GetCollectionByIDV1OperationSpec;
import io.github.primelib.komga.client.operations.GetCollectionsV1OperationSpec;
import io.github.primelib.komga.client.operations.PatchCollectionByIDV1OperationSpec;
import io.github.primelib.komga.client.operations.PostCollectionByIDThumbnailsV1OperationSpec;
import io.github.primelib.komga.client.operations.PostCollectionsV1OperationSpec;
import io.github.primelib.komga.client.operations.PutCollectionByIDThumbnailByThumbnailIDSelectedV1OperationSpec;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;

/**
 * KomgaClientseriesCollectionControllerConsumerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public class KomgaClientseriesCollectionControllerConsumerApi {
    private final KomgaClientseriesCollectionControllerApi api;

    public KomgaClientseriesCollectionControllerConsumerApi(KomgaClientseriesCollectionControllerApi api) {
        this.api = api;
    }


    /**
    * PutCollectionByIDThumbnailByThumbnailIDSelectedV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    *   <li>thumbnailId: </li>
    * </ul>
    */
    public void PutCollectionByIDThumbnailByThumbnailIDSelectedV1(Consumer<PutCollectionByIDThumbnailByThumbnailIDSelectedV1OperationSpec> spec) {
        PutCollectionByIDThumbnailByThumbnailIDSelectedV1OperationSpec r = new PutCollectionByIDThumbnailByThumbnailIDSelectedV1OperationSpec(spec);
        api.PutCollectionByIDThumbnailByThumbnailIDSelectedV1(r.id(), r.thumbnailId());
    }

    /**
    * GetCollectionsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>search: </li>
    *   <li>libraryId: </li>
    *   <li>unpaged: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    * </ul>
    */
    public PageCollectionDto GetCollectionsV1(Consumer<GetCollectionsV1OperationSpec> spec) {
        GetCollectionsV1OperationSpec r = new GetCollectionsV1OperationSpec(spec);
        return api.GetCollectionsV1(r.search(), r.libraryId(), r.unpaged(), r.page(), r.size());
    }

    /**
    * PostCollectionsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>payload: </li>
    * </ul>
    */
    public CollectionDto PostCollectionsV1(Consumer<PostCollectionsV1OperationSpec> spec) {
        PostCollectionsV1OperationSpec r = new PostCollectionsV1OperationSpec(spec);
        return api.PostCollectionsV1(r.payload());
    }

    /**
    * GetCollectionByIDThumbnailsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    * </ul>
    */
    public ThumbnailSeriesCollectionDto[] GetCollectionByIDThumbnailsV1(Consumer<GetCollectionByIDThumbnailsV1OperationSpec> spec) {
        GetCollectionByIDThumbnailsV1OperationSpec r = new GetCollectionByIDThumbnailsV1OperationSpec(spec);
        return api.GetCollectionByIDThumbnailsV1(r.id());
    }

    /**
    * PostCollectionByIDThumbnailsV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    *   <li>selected: </li>
    *   <li>payload: </li>
    * </ul>
    */
    public ThumbnailSeriesCollectionDto PostCollectionByIDThumbnailsV1(Consumer<PostCollectionByIDThumbnailsV1OperationSpec> spec) {
        PostCollectionByIDThumbnailsV1OperationSpec r = new PostCollectionByIDThumbnailsV1OperationSpec(spec);
        return api.PostCollectionByIDThumbnailsV1(r.id(), r.selected(), r.payload());
    }

    /**
    * GetCollectionByIDV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    * </ul>
    */
    public CollectionDto GetCollectionByIDV1(Consumer<GetCollectionByIDV1OperationSpec> spec) {
        GetCollectionByIDV1OperationSpec r = new GetCollectionByIDV1OperationSpec(spec);
        return api.GetCollectionByIDV1(r.id());
    }

    /**
    * DeleteCollectionByIDV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    * </ul>
    */
    public void DeleteCollectionByIDV1(Consumer<DeleteCollectionByIDV1OperationSpec> spec) {
        DeleteCollectionByIDV1OperationSpec r = new DeleteCollectionByIDV1OperationSpec(spec);
        api.DeleteCollectionByIDV1(r.id());
    }

    /**
    * PatchCollectionByIDV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    *   <li>payload: </li>
    * </ul>
    */
    public void PatchCollectionByIDV1(Consumer<PatchCollectionByIDV1OperationSpec> spec) {
        PatchCollectionByIDV1OperationSpec r = new PatchCollectionByIDV1OperationSpec(spec);
        api.PatchCollectionByIDV1(r.id(), r.payload());
    }

    /**
    * GetCollectionByIDThumbnailByThumbnailIDV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    *   <li>thumbnailId: </li>
    * </ul>
    */
    public void GetCollectionByIDThumbnailByThumbnailIDV1(Consumer<GetCollectionByIDThumbnailByThumbnailIDV1OperationSpec> spec) {
        GetCollectionByIDThumbnailByThumbnailIDV1OperationSpec r = new GetCollectionByIDThumbnailByThumbnailIDV1OperationSpec(spec);
        api.GetCollectionByIDThumbnailByThumbnailIDV1(r.id(), r.thumbnailId());
    }

    /**
    * DeleteCollectionByIDThumbnailByThumbnailIDV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    *   <li>thumbnailId: </li>
    * </ul>
    */
    public void DeleteCollectionByIDThumbnailByThumbnailIDV1(Consumer<DeleteCollectionByIDThumbnailByThumbnailIDV1OperationSpec> spec) {
        DeleteCollectionByIDThumbnailByThumbnailIDV1OperationSpec r = new DeleteCollectionByIDThumbnailByThumbnailIDV1OperationSpec(spec);
        api.DeleteCollectionByIDThumbnailByThumbnailIDV1(r.id(), r.thumbnailId());
    }

    /**
    * GetCollectionByIDThumbnailV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    * </ul>
    */
    public void GetCollectionByIDThumbnailV1(Consumer<GetCollectionByIDThumbnailV1OperationSpec> spec) {
        GetCollectionByIDThumbnailV1OperationSpec r = new GetCollectionByIDThumbnailV1OperationSpec(spec);
        api.GetCollectionByIDThumbnailV1(r.id());
    }

    /**
    * GetCollectionByIDSeriesV1
    * 
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: </li>
    *   <li>libraryId: </li>
    *   <li>status: </li>
    *   <li>readStatus: </li>
    *   <li>publisher: </li>
    *   <li>language: </li>
    *   <li>genre: </li>
    *   <li>tag: </li>
    *   <li>ageRating: </li>
    *   <li>releaseYears: </li>
    *   <li>deleted: </li>
    *   <li>complete: </li>
    *   <li>unpaged: </li>
    *   <li>page: Zero-based page index (0..N)</li>
    *   <li>size: The size of the page to be returned</li>
    *   <li>author: Author criteria in the format: name,role. Multiple author criteria are supported.</li>
    * </ul>
    */
    public PageSeriesDto GetCollectionByIDSeriesV1(Consumer<GetCollectionByIDSeriesV1OperationSpec> spec) {
        GetCollectionByIDSeriesV1OperationSpec r = new GetCollectionByIDSeriesV1OperationSpec(spec);
        return api.GetCollectionByIDSeriesV1(r.id(), r.libraryId(), r.status(), r.readStatus(), r.publisher(), r.language(), r.genre(), r.tag(), r.ageRating(), r.releaseYears(), r.deleted(), r.complete(), r.unpaged(), r.page(), r.size(), r.author());
    }

}
